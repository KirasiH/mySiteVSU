console.log('Script is work')


const stories = [
    {
        id: 1,
        firstAuhtor: 1,
        title: "Побег от Мурки",
        content: `Тихий вечер опустился на старый двор, окутывая его сизыми сумерками. В норке под корнями раскидистой яблони притаился маленький мышонок Шустрик. Его серо-рыжая шерстка взъерошилась от каждого шороха, а тонкие усы нервно подрагивали. Сегодня он не рискнул выйти за запасами — весь день у его убежища дежурила Мурка.

Рыжая кошка с белыми "носочками" на лапах была настоящим кошмаром для всех мышей в округе. Она не просто охотилась — она играла с добычей, подбрасывая полуживых зверьков лапой, прежде чем нанести последний укус. Шустрик видел, как она так расправилась с его двоюродным братом всего неделю назад. С тех пор он выходил из норы только по ночам, когда Мурка уходила греться на кухонный подоконник.

Но сегодня все пошло наперекосяк.

Шустрик уже собирался выползти, когда услышал тихое шарканье когтей по земле. Мурка не ушла. Она притаилась в двух шагах от входа в нору, ее зеленые глаза светились в темноте, как два ядовитых огонька. Сердце мышенка заколотилось так сильно, что казалось, вот-вот выпрыгнет из груди.

— Ну что, малыш? — словно прошептал ветер. Шустрик даже не понял, показалось ли ему, или кошка действительно умеет разговаривать. — Ты думаешь, я тебя не вижу?

Он отпрянул вглубь норы, но знал — это не спасет. Если Мурка захочет, она разроет вход своими когтистыми лапами. Нужно было бежать.

В глубине убежища был запасной ход — узкая щель, ведущая под сарай. Шустрик протиснулся в нее, царапая бока о грубые края. За ним донеслось недовольное урчание.

— Ах вот как... — проворчала Мурка.

Сарай был старым, с прогнившими досками и запахом плесени. Шустрик нырнул под груду пустых мешков, стараясь не шуршать. Но кошка уже учуяла его. Он слышал, как она царапает дерево когтями, пытаясь найти лазейку.

— Я все равно тебя достану, — пообещала она.

Шустрик знал, что если останется здесь, Мурка его найдет. Нужно было выбираться во двор, но там — открытое пространство, где он станет легкой добычей. Тогда он заметил дыру в полу — крошечный проход в подполье.

Не раздумывая, он прыгнул в темноту.

Под сараем было сыро и холодно. Шустрик пробирался между паутиной и ржавыми гвоздями, пока не наткнулся на трещину в фундаменте. Снаружи виднелась высокая трава — идеальное укрытие!

Он уже было собрался вылезти, как вдруг услышал мягкий топот. Мурка обошла сарай и теперь ждала его с другой стороны.

— Думаешь, я не знаю все твои ходы? — замурлыкала она.

Шустрик замер. Он был в ловушке.

Но тут вдалеке раздался звон миски — хозяйка насыпала кошке корм. Мурка насторожилась.

— Ладно, сегодня тебе повезло, — бросила она, разворачиваясь. — Но завтра я тебя найду.

Шустрик не двигался, пока звуки ее шагов не затихли. Только тогда он выбрался из-под сарая и стремглав помчался к своей норе.

Он был жив.

Но теперь он знал — Мурка не отступится.

И в следующий раз убежать будет гораздо сложнее...`,
        author: "Иван",
        aboutMe: "Я записываю то, что мир старательно забыл. Истории приходят ко мне обрывками: выцветшие письма, обгоревшие плёнки, шепот в пустых комнатах. Я не выдумываю — я только соединяю точки. Кто-то называет это магией, кто-то — бредом. Но однажды вы узнаете в моих строках свой сон, которого не было. И тогда станет ясно, почему я пишу."
    },
    {
        id: 2,
        firstAuhtor: 0,
        title: "Как Барсик научился открывать холодильник",
        content: `Барсик был не простым котом. Рыжий, упитанный, с наглым взглядом зеленых глаз, он считал себя полноправным хозяином квартиры, а своих людей — лишь прислугой, которая почему-то не всегда вовремя наполняет миску. Особенно его возмущало, когда холодильник закрывался прямо перед его носом, скрывая за толстой дверью всевозможные вкусности.

Однажды вечером, когда хозяева улеглись спать, Барсик устроился на кухонном полу и уставился на ненавистный агрегат. "Почему они могут его открывать, а я нет?" — думал он, наблюдая, как дверца плотно прилегает к корпусу.

Первая попытка была наивной — он ткнулся мордой в холодную поверхность. Холодильник даже не дрогнул.

Вторая попытка — когтями. Он царапнул дверцу, оставив пару белых полосок на пластике. Результат тот же.

Но Барсик не сдавался.

На третий день он заметил, что хозяева всегда тянут за ручку. "Ага!" — мелькнуло в кошачьем мозгу.

Следующей ночью он вскочил на соседний стул, оттуда — на стол, и уже с высоты прицелился в блестящую металлическую полоску. Вцепившись передними лапами в ручку, он повис на ней всем весом.

Щелчок.

Дверь подалась!

Торжествуя, Барсик спрыгнул на пол и наблюдал, как тяжелая створка медленно распахивается, выпуская в комнату холодный воздух и манящие запахи. Колбаса! Сыр! Остатки курицы!

С тех пор в доме начался хаос.

Хозяева просыпались от грохота падающих банок. На полу то и дело оказывались разгрызенные пакеты с молоком. А однажды Барсик утащил целую котлету и гордо принес ее в постель, словно добычу.

— Да как он вообще это делает?! — недоумевали люди, устанавливая на холодильник детский замок.

Но было уже поздно.

Барсик научился главному — там, где есть воля, найдется и способ.

А если способ не сработает — можно просто сесть перед холодильником и орать, пока его не откроют.`,
        author: "Барсучков",
        aboutMe: "Я смешиваю свет и ржавчину, смех и тишину после выстрела. Мои сюжеты рождаются на стыке «а что, если» и «но ведь нельзя». Здесь пауки плетут паутину из струн пианино, а ангелы пачкают крылья в грязи. Не ищите морали — ищите послевкусие. И да, последнюю главу вы допишете сами. В голове. В три часа ночи"
    },
    {
        id: 3,
        firstAuhtor: 0,
        title: "Ночные приключения Рыжика",
        content: `Когда в доме гасли все огни, и хозяева засыпали, для Рыжика начиналось самое интересное. Этот рыжий проказник с белыми лапками днём сладко спал на подоконнике, но ночью превращался в настоящего искателя приключений.

Вчерашняя ночь не стала исключением. Как только в спальне раздался ровный храп, Рыжик потянулся, почесал за ухом и отправился на разведку.

Сначала он проверил кухню – вдруг забыли убрать колбасу? Но холодильник был надёжно закрыт, а миска пуста. Тогда кот переключился на более увлекательное занятие – охоту за тенями. Лунный свет, пробивающийся сквозь занавески, рисовал на стенах загадочные узоры. Рыжик подкрадывался, прыгал, ловил невидимую добычу... пока случайно не задел лапой вазу с цветами.

Грохот разнёсся по всей квартире! Затаив дыхание, кот прижался к полу, но, к счастью, хозяева не проснулись.

Решив, что кухня слишком опасна, Рыжик отправился в гостиную. Здесь его ждала новая забава – гонки по дивану с резкими поворотами и прыжками через подушки. Потом он обнаружил забытый клубок ниток и с упоением размотал его по всей комнате, оставляя за собой запутанный след.

Разгулявшись не на шутку, кот запрыгнул на книжную полку. Вот где было раздолье! Книги так заманчиво пахли, а их корешки так удобно грызть...

Увлёкшись, Рыжик не заметил, как столкнул на пол тяжёлый том энциклопедии. На этот раз в спальне раздался сердитый окрик.

Быстрее молнии кот рванул в своё любимое укрытие – под кровать. Оттуда он наблюдал, как хозяин, ругаясь, собирает разбросанные вещи.

— Опять этот рыжий бандит! – проворчал мужчина.

Рыжик невинно прикрыл глаза. Кто? Он? Да он же просто спал всю ночь...

А утром, когда солнце заглянуло в комнату, кот сладко зевнул и устроился на подушке, готовясь к новому дню. Впереди был долгий сон, чтобы набраться сил для следующих ночных приключений.`,
        author: "Максим",
        aboutMe: "Я собираю осколки снов на краю яви. Мои истории — это тени, которые шевелятся, если на них не смотреть прямо. Иногда я пишу словами, иногда — молчанием между строк. Мои герои теряют имена, но обретают судьбы. Читатель? Он просто случайный путник, заглянувший в зеркало, которое я забыл разбить."
    },
];

class StoryContainer{

}

class StateVisibility_Indiv_content{

    constructor(list, content, creator){
        this.list = list;
        this.content = content;
        this.creator = creator;
    }

    visListStory() {
        this.list.style.display = 'block';
        this.content.style.display = 'none';
        this.creator.style.display = 'none';
    }

    visContent(){
        this.list.style.display = 'none';
        this.content.style.display = 'block';
        this.creator.style.display = 'none';
    }

    vidCreator(){
        this.list.style.display = 'none';
        this.content.style.display = 'none';
        this.creator.style.display = 'block';
    }
}

const catalogLine = document.getElementById('catalogLink');
const storyListContainer = document.getElementById('storyListContainer');
const storyContentContainer = document.getElementById('storyContentContainer');
const storyCreator = document.getElementById('creatorStory');

const firstAuhtor = document.getElementById('firstAuhtor');
const secondAuhtor = document.getElementById('secondAuhtor');

const authorName = document.getElementById('authorName');
const authorAbout = document.getElementById('authorAbout');

const StateVisibilityContener = new StateVisibility_Indiv_content(storyListContainer, storyContentContainer, storyCreator);

storyCreator.style.display = 'none';


function showStoryList() {
    StateVisibilityContener.visListStory();
    renderStoryList();
}

function showStoryContent(storyId) {
    const story = stories.find(s => s.id === storyId);
    if (!story) return;
    
    if (localStorage.getItem('cookieConsent') === 'accepted') {
        document.cookie = `lastStoryId=${storyId}; max-age=${60*60*24*7}; path=/`;
    }

    document.getElementById('storyTitle').textContent = story.title;
    document.getElementById('storyText').innerHTML = formatStoryText(story.content);

    if(story.firstAuhtor == 1){
        firstAuhtor.style.display = 'block';
        secondAuhtor.style.display = 'none'; 
    } else {
        firstAuhtor.style.display = 'none';
        secondAuhtor.style.display = 'block'; 
        authorAbout.textContent = story.aboutMe;
        authorName.textContent = story.author;
    }
    
    StateVisibilityContener.visContent();
}

function formatStoryText(text) {
    const styles = {
        paragraph: 'font-size: 18px; line-height:1.6; margin:0 0 15px 0;',
        bold: 'font-weight:bold;',
        italic: 'font-style:italic;'
    };
    
    return text.split('\n\n').map(paragraph => {
        // Добавляем базовое форматирование
        let formatted = paragraph
            .replace(/\*\*(.*?)\*\*/g, `<span style="${styles.bold}">$1</span>`)
            .replace(/\*(.*?)\*/g, `<span style="${styles.italic}">$1</span>`)
            .replace(/\n/g, '<br>');
            
        return `<p style="${styles.paragraph}">${formatted}</p>`;
    }).join('');
}


catalogLine.addEventListener('click', function(e) {
    e.preventDefault();
    showStoryList();
});

function checkCookies() {
    
    if (window.location.hash === '#Catalog') {
        showStoryList();
        return;
    }

    const cookies = document.cookie.split(';').map(c => c.trim());
    const lastStoryCookie = cookies.find(c => c.startsWith('lastStoryId='));
    
    if (lastStoryCookie) {
        const lastStoryId = parseInt(lastStoryCookie.split('=')[1]);
        showStoryContent(lastStoryId);
    } else {
        showStoryList();
    }
}

function renderStoryList() {
    storyListContainer.innerHTML = '';
    stories.forEach(story => {
        const card = document.createElement('div');
        card.className = 'story-card';
        card.style.marginBottom = 9;
        card.style.marginTop = 9;
        card.innerHTML = `
            <h2>${story.title}</h2>
            <p style="font-size: 18px;"><em>Автор: ${story.author}</em></p>
        `;
        card.addEventListener('click', () => showStoryContent(story.id));
        storyListContainer.appendChild(card);

        firstAuhtor.style.display = 'block';
        secondAuhtor.style.display = 'none'; 
    });
}


document.addEventListener('DOMContentLoaded', checkCookies);